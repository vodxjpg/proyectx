/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/products/route";
exports.ids = ["app/api/products/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("better-sqlite3");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:events");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=%2Fhome%2Fzodx%2FDesktop%2Fproyectx%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fzodx%2FDesktop%2Fproyectx&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=%2Fhome%2Fzodx%2FDesktop%2Fproyectx%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fzodx%2FDesktop%2Fproyectx&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_zodx_Desktop_proyectx_app_api_products_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/products/route.ts */ \"(rsc)/./app/api/products/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/products/route\",\n        pathname: \"/api/products\",\n        filename: \"route\",\n        bundlePath: \"app/api/products/route\"\n    },\n    resolvedPagePath: \"/home/zodx/Desktop/proyectx/app/api/products/route.ts\",\n    nextConfigOutput,\n    userland: _home_zodx_Desktop_proyectx_app_api_products_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/products/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9kdWN0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvZHVjdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9kdWN0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGem9keCUyRkRlc2t0b3AlMkZwcm95ZWN0eCUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGaG9tZSUyRnpvZHglMkZEZXNrdG9wJTJGcHJveWVjdHgmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ0s7QUFDbEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFwaWdyYW0vPzM0ZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL2hvbWUvem9keC9EZXNrdG9wL3Byb3llY3R4L2FwcC9hcGkvcHJvZHVjdHMvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3Byb2R1Y3RzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcHJvZHVjdHNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3Byb2R1Y3RzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL2hvbWUvem9keC9EZXNrdG9wL3Byb3llY3R4L2FwcC9hcGkvcHJvZHVjdHMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3Byb2R1Y3RzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=%2Fhome%2Fzodx%2FDesktop%2Fproyectx%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fzodx%2FDesktop%2Fproyectx&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/products/route.ts":
/*!***********************************!*\
  !*** ./app/api/products/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _utils_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/auth */ \"(rsc)/./utils/auth.ts\");\n/* harmony import */ var _utils_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/db */ \"(rsc)/./utils/db.ts\");\n\n\n\n/** Helper to get organization ID from session */ async function getOrgIdOrThrow(req) {\n    const sessionResponse = await _utils_auth__WEBPACK_IMPORTED_MODULE_1__.auth.api.getSession({\n        headers: req.headers\n    });\n    if (!sessionResponse || !sessionResponse.session) {\n        throw new Error(\"Unauthorized\");\n    }\n    const activeOrgId = sessionResponse.session.activeOrganizationId;\n    if (!activeOrgId) throw new Error(\"No active organization in session\");\n    return activeOrgId;\n}\n/**\n * GET /api/products\n *\n * Behavior:\n *  - If no query params: returns all parent products (simple or variable) with:\n *      id, name, sku, type, imageURL, categories[], plus an \"aggregatedStock\" summary\n *      (totalStock), and for variable products: variableMinPrice & variableMaxPrice\n *\n *  - If query param ?id=xxx or ?sku=xxx: returns details for that single product,\n *      including:\n *        - product-level fields\n *        - categories\n *        - an array of all variants (for variable), each with stock lines\n *        - or the single variant + stock lines (for simple)\n */ async function GET(req) {\n    try {\n        const organizationId = await getOrgIdOrThrow(req);\n        // Extract search params: ?id=xxx or ?sku=xxx\n        const { searchParams } = new URL(req.url);\n        const paramId = searchParams.get(\"id\");\n        const paramSku = searchParams.get(\"sku\");\n        // If user provided ?id or ?sku, we do \"getOneProductDetail\"\n        if (paramId || paramSku) {\n            return await getOneProductDetail(organizationId, paramId, paramSku);\n        }\n        // Otherwise, we return the entire list of parent products with partial details\n        return await getAllParentProducts(organizationId);\n    } catch (error) {\n        console.error(\"[GET] /api/products Error:\", error.message);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message\n        }, {\n            status: error.message === \"Unauthorized\" ? 401 : 400\n        });\n    }\n}\n/** =========================================\n *  getAllParentProducts(organizationId)\n *    Returns an array of products with:\n *      - product fields: id, name, type, sku, imageURL, ...\n *      - categories[] array\n *      - totalStock (sum of all variant stock)\n *      - variableMinPrice & variableMaxPrice for variable products\n * =========================================*/ async function getAllParentProducts(organizationId) {\n    // 1) Fetch the parent products\n    const products = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product as p\").select([\n        \"p.id\",\n        \"p.name\",\n        \"p.type\",\n        \"p.sku\",\n        \"p.price\",\n        \"p.status\",\n        \"p.imageURL\",\n        \"p.createdAt\",\n        \"p.updatedAt\"\n    ]).where(\"p.organizationId\", \"=\", organizationId).orderBy(\"p.createdAt\", \"desc\").execute();\n    const productIds = products.map((p)=>p.id);\n    // 2) Fetch all category assignments in bulk\n    //    We then group by productId\n    const categoryAssignments = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product_category_assignments as pca\").innerJoin(\"product_categories as c\", \"c.id\", \"pca.categoryId\").select([\n        \"pca.productId\",\n        \"c.id as categoryId\",\n        \"c.name as categoryName\",\n        \"c.parentId as categoryParent\"\n    ]).where(\"pca.organizationId\", \"=\", organizationId).where(\"pca.productId\", \"in\", productIds).execute();\n    const categoriesByProductId = {};\n    for (const ca of categoryAssignments){\n        if (!categoriesByProductId[ca.productId]) {\n            categoriesByProductId[ca.productId] = [];\n        }\n        categoriesByProductId[ca.productId].push({\n            categoryId: ca.categoryId,\n            categoryName: ca.categoryName,\n            categoryParent: ca.categoryParent\n        });\n    }\n    // 3) For each product, we want an aggregated stock approach\n    //    We'll fetch from product_variants => product_stock\n    //    Summing all stock if it's variable, or just the single variant if simple\n    //    Then group by productId\n    const variantRows = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product_variants as pv\").leftJoin(\"product_stock as ps\", \"ps.variantId\", \"pv.id\").select([\n        \"pv.productId\",\n        \"pv.id as variantId\",\n        \"pv.sku as variantSku\",\n        \"pv.price as variantPrice\",\n        \"ps.stockLevel\",\n        \"ps.visibility\",\n        \"ps.manageStock\",\n        \"ps.allowBackorder\"\n    ]).where(\"pv.organizationId\", \"=\", organizationId).where(\"pv.productId\", \"in\", productIds).execute();\n    // We'll accumulate totalStock per product, and also track\n    // min/max variant price for variable products\n    const aggregatedStockByProductId = {};\n    // minPrice / maxPrice for variable\n    const minPriceByProductId = {};\n    const maxPriceByProductId = {};\n    for (const vr of variantRows){\n        const pid = vr.productId;\n        if (!aggregatedStockByProductId[pid]) {\n            aggregatedStockByProductId[pid] = 0;\n        }\n        aggregatedStockByProductId[pid] += vr.stockLevel || 0;\n        // For variable min/max, we check variantPrice\n        // We'll just always track min/max for every variant,\n        // though for simple products there's only 1 variant anyway\n        const vPrice = vr.variantPrice || 0;\n        if (minPriceByProductId[pid] === undefined) {\n            minPriceByProductId[pid] = vPrice;\n            maxPriceByProductId[pid] = vPrice;\n        } else {\n            if (vPrice < minPriceByProductId[pid]) {\n                minPriceByProductId[pid] = vPrice;\n            }\n            if (vPrice > maxPriceByProductId[pid]) {\n                maxPriceByProductId[pid] = vPrice;\n            }\n        }\n    }\n    // 4) Construct final array of product data\n    const final = products.map((p)=>{\n        const totalStock = aggregatedStockByProductId[p.id] || 0;\n        const cats = categoriesByProductId[p.id] || [];\n        // If this is a variable product, we put\n        //   variableMinPrice, variableMaxPrice\n        //   otherwise for simple we have p.price\n        let variableMinPrice = null;\n        let variableMaxPrice = null;\n        if (p.type === \"variable\") {\n            // fallback if no variants => 0\n            variableMinPrice = minPriceByProductId[p.id] || 0;\n            variableMaxPrice = maxPriceByProductId[p.id] || 0;\n        }\n        return {\n            id: p.id,\n            name: p.name,\n            type: p.type,\n            sku: p.sku,\n            status: p.status,\n            imageURL: p.imageURL,\n            // For simple products, 'price' is stored on p.price\n            // For variable, we do min/max\n            price: p.price,\n            variableMinPrice,\n            variableMaxPrice,\n            totalStock,\n            categories: cats\n        };\n    });\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(final, {\n        status: 200\n    });\n}\n/** =========================================\n *  getOneProductDetail(organizationId, id?, sku?)\n *    Returns a single product *with all details*:\n *      - product fields\n *      - categories\n *      - an array of variants (even for simple => 1 variant)\n *        each variant has stock lines\n * =========================================*/ async function getOneProductDetail(organizationId, productId, productSku) {\n    // 1) Find the product row by ID or SKU\n    let product;\n    if (productId) {\n        product = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product\").selectAll().where(\"organizationId\", \"=\", organizationId).where(\"id\", \"=\", productId).executeTakeFirst();\n    } else if (productSku) {\n        product = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product\").selectAll().where(\"organizationId\", \"=\", organizationId).where(\"sku\", \"=\", productSku).executeTakeFirst();\n    }\n    if (!product) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Product not found\"\n        }, {\n            status: 404\n        });\n    }\n    const pid = product.id;\n    // 2) Get categories for this product\n    const categories = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product_category_assignments as pca\").innerJoin(\"product_categories as c\", \"c.id\", \"pca.categoryId\").select([\n        \"c.id as categoryId\",\n        \"c.name as categoryName\",\n        \"c.parentId as categoryParent\",\n        \"c.slug as categorySlug\"\n    ]).where(\"pca.productId\", \"=\", pid).where(\"pca.organizationId\", \"=\", organizationId).execute();\n    // 3) Fetch all variants for this product (including simple => 1 variant)\n    const variants = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product_variants as pv\").selectAll().where(\"pv.productId\", \"=\", pid).where(\"pv.organizationId\", \"=\", organizationId).execute();\n    // 4) For each variant, fetch stock lines\n    const variantIds = variants.map((v)=>v.id);\n    let allStock = [];\n    if (variantIds.length > 0) {\n        allStock = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product_stock as ps\").selectAll().where(\"ps.variantId\", \"in\", variantIds).where(\"ps.organizationId\", \"=\", organizationId).execute();\n    }\n    // Group stock by variantId\n    const stockByVariantId = {};\n    for (const s of allStock){\n        if (!stockByVariantId[s.variantId]) {\n            stockByVariantId[s.variantId] = [];\n        }\n        stockByVariantId[s.variantId].push(s);\n    }\n    // 5) Combine variant + stock\n    //    Also fetch variant terms if you want fully detailed attribute/term usage\n    const variantTermsRows = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product_variant_terms as pvt\").innerJoin(\"product_attribute_terms as pat\", \"pat.id\", \"pvt.termId\").select([\n        \"pvt.variantId\",\n        \"pat.attributeId\",\n        \"pat.name as termName\",\n        \"pat.slug as termSlug\"\n    ]).where(\"pvt.variantId\", \"in\", variantIds).where(\"pvt.organizationId\", \"=\", organizationId).execute();\n    const termsByVariantId = {};\n    for (const vt of variantTermsRows){\n        if (!termsByVariantId[vt.variantId]) {\n            termsByVariantId[vt.variantId] = [];\n        }\n        termsByVariantId[vt.variantId].push({\n            attributeId: vt.attributeId,\n            name: vt.termName,\n            slug: vt.termSlug\n        });\n    }\n    const variantsWithStock = variants.map((v)=>({\n            ...v,\n            stock: stockByVariantId[v.id] || [],\n            terms: termsByVariantId[v.id] || []\n        }));\n    // 6) Optionally fetch \"attribute assignments\" for the parent product\n    const attributeAssignments = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.selectFrom(\"product_attribute_assignments as paa\").innerJoin(\"product_attributes as pa\", \"pa.id\", \"paa.attributeId\").leftJoin(\"product_term as pt\", (join)=>{\n        join.onRef(\"pt.productId\", \"=\", \"paa.productId\").onRef(\"pt.attributeId\", \"=\", \"paa.attributeId\");\n    }).leftJoin(\"product_attribute_terms as pat2\", \"pat2.id\", \"pt.termId\").select([\n        \"paa.attributeId\",\n        \"paa.usedForVariation\",\n        \"pa.name as attributeName\",\n        \"pa.slug as attributeSlug\",\n        \"pat2.id as termId\",\n        \"pat2.name as termName\",\n        \"pat2.slug as termSlug\"\n    ]).where(\"paa.productId\", \"=\", pid).where(\"paa.organizationId\", \"=\", organizationId).execute();\n    const attrsById = {};\n    for (const row of attributeAssignments){\n        const aId = row.attributeId;\n        if (!attrsById[aId]) {\n            attrsById[aId] = {\n                attributeId: aId,\n                usedForVariation: !!row.usedForVariation,\n                attributeName: row.attributeName,\n                attributeSlug: row.attributeSlug,\n                terms: []\n            };\n        }\n        if (row.termId) {\n            attrsById[aId].terms.push({\n                id: row.termId,\n                name: row.termName,\n                slug: row.termSlug\n            });\n        }\n    }\n    const productAttributes = Object.values(attrsById);\n    // 7) Build final single-product response\n    const fullProduct = {\n        ...product,\n        categories,\n        attributes: productAttributes,\n        variants: variantsWithStock\n    };\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(fullProduct, {\n        status: 200\n    });\n}\nasync function POST(req) {\n    try {\n        // Get organization ID from session\n        const organizationId = await getOrgIdOrThrow(req);\n        console.log(\"[POST] organizationId:\", organizationId);\n        // Parse incoming payload\n        const { name, description, type, sku, price, status, categories, attributes, variations, stock, imageURL } = await req.json();\n        console.log(\"[POST] Received payload:\", {\n            name,\n            description,\n            type,\n            sku,\n            price,\n            status,\n            categories,\n            attributes,\n            variations,\n            stock,\n            imageURL\n        });\n        if (!name || !type || !status) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Name, type, and status are required\"\n            }, {\n                status: 400\n            });\n        }\n        const id = crypto.randomUUID();\n        const createdAt = new Date().toISOString();\n        const updatedAt = createdAt;\n        console.log(\"[POST] New product ID:\", id);\n        // Start transaction\n        const product = await _utils_db__WEBPACK_IMPORTED_MODULE_2__.db.transaction().execute(async (trx)=>{\n            // 1) Insert product\n            const productValues = {\n                id,\n                organizationId,\n                name,\n                description,\n                type,\n                // We store parent SKU only if simple,\n                // but you previously changed to allow SKU for any product. If so, remove the conditional below:\n                sku: type === \"simple\" ? sku : sku,\n                price: type === \"simple\" ? price : null,\n                status,\n                createdAt,\n                updatedAt,\n                imageURL: imageURL || null\n            };\n            console.log(\"[POST] Inserting product with values:\", productValues);\n            const insertedProduct = await trx.insertInto(\"product\").values(productValues).returningAll().executeTakeFirstOrThrow();\n            console.log(\"[POST] Inserted product:\", insertedProduct);\n            // 2) Insert category assignments\n            if (categories && categories.length > 0) {\n                const categoryAssignments = categories.map((categoryId)=>({\n                        id: crypto.randomUUID(),\n                        productId: id,\n                        categoryId,\n                        organizationId\n                    }));\n                console.log(\"[POST] Inserting category assignments:\", categoryAssignments);\n                await trx.insertInto(\"product_category_assignments\").values(categoryAssignments).execute();\n            }\n            // 3) Insert attribute assignments and product terms for non-variation attributes\n            if (attributes && attributes.length > 0) {\n                // Log a lookup for each attribute to confirm existence and organization\n                for (const attr of attributes){\n                    const dbAttr = await trx.selectFrom(\"product_attributes\").selectAll().where(\"id\", \"=\", attr.attributeId).executeTakeFirst();\n                    console.log(\"[POST] Lookup attribute:\", attr.attributeId, dbAttr);\n                    if (!dbAttr) {\n                        throw new Error(`Attribute ${attr.attributeId} not found in product_attributes`);\n                    }\n                    // Optional: Check if dbAttr.organizationId matches organizationId\n                    if (dbAttr.organizationId !== organizationId) {\n                        throw new Error(`Attribute ${attr.attributeId} organization mismatch. Expected ${organizationId} but got ${dbAttr.organizationId}`);\n                    }\n                }\n                const attributeAssignments = attributes.map((attr)=>({\n                        id: crypto.randomUUID(),\n                        productId: id,\n                        attributeId: attr.attributeId,\n                        usedForVariation: type === \"variable\" && attr.usedForVariation ? 1 : 0,\n                        organizationId\n                    }));\n                console.log(\"[POST] Inserting attribute assignments:\", attributeAssignments);\n                await trx.insertInto(\"product_attribute_assignments\").values(attributeAssignments).execute();\n                // Insert terms for attributes not used for variation (if any)\n                const terms = attributes.filter((attr)=>!attr.usedForVariation || type === \"simple\").flatMap((attr)=>attr.terms.map((termId)=>({\n                            id: crypto.randomUUID(),\n                            productId: id,\n                            attributeId: attr.attributeId,\n                            termId,\n                            organizationId\n                        })));\n                if (terms.length > 0) {\n                    console.log(\"[POST] Inserting product terms:\", terms);\n                    await trx.insertInto(\"product_term\").values(terms).execute();\n                }\n            }\n            // 4) Insert variants (and their variant terms and stock)\n            if (type === \"variable\" && variations && variations.length > 0) {\n                const variantInserts = variations.map((variant)=>({\n                        id: crypto.randomUUID(),\n                        productId: id,\n                        organizationId,\n                        sku: variant.sku,\n                        price: variant.price,\n                        createdAt,\n                        updatedAt,\n                        imageURL: variant.imageURL || null\n                    }));\n                console.log(\"[POST] Inserting variants:\", variantInserts);\n                const insertedVariants = await trx.insertInto(\"product_variants\").values(variantInserts).returning([\n                    \"id\"\n                ]).execute();\n                console.log(\"[POST] Inserted variants:\", insertedVariants);\n                // Insert variant terms\n                const variantTerms = variations.flatMap((variant, index)=>variant.terms.map((term)=>({\n                            id: crypto.randomUUID(),\n                            variantId: insertedVariants[index].id,\n                            attributeId: term.attributeId,\n                            termId: term.termId,\n                            organizationId\n                        })));\n                console.log(\"[POST] Prepared variant terms:\", variantTerms);\n                if (variantTerms.length > 0) {\n                    await trx.insertInto(\"product_variant_terms\").values(variantTerms).execute();\n                    console.log(\"[POST] Inserted variant terms\");\n                }\n                // Insert stock for each variation\n                for(let i = 0; i < variations.length; i++){\n                    const variation = variations[i];\n                    const variantId = insertedVariants[i].id;\n                    if (variation.stock && variation.stock.length > 0) {\n                        const stockInserts = variation.stock.map((stk)=>({\n                                id: crypto.randomUUID(),\n                                variantId,\n                                countryCode: stk.countryCode,\n                                stockLevel: stk.manageStock ? stk.stockLevel || 0 : 999999999,\n                                visibility: stk.visibility ? 1 : 0,\n                                manageStock: stk.manageStock ? 1 : 0,\n                                allowBackorder: stk.allowBackorder ? 1 : 0,\n                                organizationId\n                            }));\n                        console.log(`[POST] Inserting/upserting stock for variant ${variantId}:`, stockInserts);\n                        for (const s of stockInserts){\n                            await trx.insertInto(\"product_stock\").values(s).onConflict((oc)=>oc.columns([\n                                    \"variantId\",\n                                    \"countryCode\"\n                                ]).doUpdateSet({\n                                    stockLevel: s.stockLevel,\n                                    visibility: s.visibility,\n                                    manageStock: s.manageStock,\n                                    allowBackorder: s.allowBackorder\n                                })).execute();\n                        }\n                    }\n                }\n            } else {\n                // SIMPLE PRODUCT => Insert a single variant\n                const variantId = crypto.randomUUID();\n                const simpleVariant = {\n                    id: variantId,\n                    productId: id,\n                    organizationId,\n                    sku,\n                    price,\n                    createdAt,\n                    updatedAt,\n                    imageURL: imageURL || null\n                };\n                console.log(\"[POST] Inserting simple variant:\", simpleVariant);\n                await trx.insertInto(\"product_variants\").values([\n                    simpleVariant\n                ]).execute();\n                // Insert stock for simple product\n                if (stock && stock.length > 0) {\n                    const stockInserts = stock.map((stk)=>({\n                            id: crypto.randomUUID(),\n                            variantId,\n                            countryCode: stk.countryCode,\n                            stockLevel: stk.manageStock ? stk.stockLevel || 0 : 999999999,\n                            visibility: stk.visibility ? 1 : 0,\n                            manageStock: stk.manageStock ? 1 : 0,\n                            allowBackorder: stk.allowBackorder ? 1 : 0,\n                            organizationId\n                        }));\n                    console.log(\"[POST] Inserting/upserting stock for simple product:\", stockInserts);\n                    for (const s of stockInserts){\n                        await trx.insertInto(\"product_stock\").values(s).onConflict((oc)=>oc.columns([\n                                \"variantId\",\n                                \"countryCode\"\n                            ]).doUpdateSet({\n                                stockLevel: s.stockLevel,\n                                visibility: s.visibility,\n                                manageStock: s.manageStock,\n                                allowBackorder: s.allowBackorder\n                            })).execute();\n                    }\n                }\n            }\n            return insertedProduct;\n        });\n        console.log(\"[POST] Transaction complete. Inserted product:\", product);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(product, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"[POST] Error:\", error.message, error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message\n        }, {\n            status: error.message === \"Unauthorized\" ? 401 : 400\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/products/route.ts\n");

/***/ }),

/***/ "(rsc)/./utils/auth.ts":
/*!***********************!*\
  !*** ./utils/auth.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth)\n/* harmony export */ });\n/* harmony import */ var better_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! better-auth */ \"(rsc)/./node_modules/better-auth/dist/index.mjs\");\n/* harmony import */ var better_auth_next_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! better-auth/next-js */ \"(rsc)/./node_modules/better-auth/dist/integrations/next-js.mjs\");\n/* harmony import */ var better_auth_plugins__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! better-auth/plugins */ \"(rsc)/./node_modules/better-auth/dist/plugins/index.mjs\");\n/* harmony import */ var kysely__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! kysely */ \"(rsc)/./node_modules/kysely/dist/esm/dialect/mysql/mysql-dialect.js\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var kysely__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! kysely */ \"(rsc)/./node_modules/kysely/dist/esm/dialect/sqlite/sqlite-dialect.js\");\n/* harmony import */ var _emails__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./emails */ \"(rsc)/./utils/emails.ts\");\n// /utils/auth.ts\n\n\n\n\n\n\n\n\nconst isProduction = \"development\" === \"production\";\nlet dialect;\nif (isProduction) {\n    dialect = new kysely__WEBPACK_IMPORTED_MODULE_6__.MysqlDialect({\n        pool: (0,mysql2_promise__WEBPACK_IMPORTED_MODULE_3__.createPool)({\n            host: process.env.MYSQL_HOST,\n            user: process.env.MYSQL_USER,\n            password: process.env.MYSQL_PASSWORD,\n            database: process.env.MYSQL_DATABASE\n        })\n    });\n} else {\n    dialect = new kysely__WEBPACK_IMPORTED_MODULE_7__.SqliteDialect({\n        database: new (better_sqlite3__WEBPACK_IMPORTED_MODULE_4___default())(\"./sqlite.db\")\n    });\n}\nconst auth = (0,better_auth__WEBPACK_IMPORTED_MODULE_0__.betterAuth)({\n    database: {\n        dialect,\n        type: isProduction ? \"mysql\" : \"sqlite\"\n    },\n    secret: process.env.BETTER_AUTH_SECRET,\n    url: process.env.BETTER_AUTH_URL,\n    emailAndPassword: {\n        enabled: true,\n        requireEmailVerification: true,\n        sendResetPassword: async ({ user, url, token }, request)=>{\n            await (0,_emails__WEBPACK_IMPORTED_MODULE_5__.sendEmail)({\n                to: user.email,\n                subject: \"Reset Your Password\",\n                text: `You requested a password reset. Click the link to reset your password: ${url}`\n            });\n        }\n    },\n    emailVerification: {\n        sendVerificationEmail: async ({ user, url, token }, request)=>{\n            await (0,_emails__WEBPACK_IMPORTED_MODULE_5__.sendEmail)({\n                to: user.email,\n                subject: \"Verify Your Email Address\",\n                text: `Thank you for signing up! Please verify your email by clicking this link: ${url}`\n            });\n        }\n    },\n    plugins: [\n        (0,better_auth_plugins__WEBPACK_IMPORTED_MODULE_2__.jwt)(),\n        (0,better_auth_plugins__WEBPACK_IMPORTED_MODULE_2__.admin)({\n            adminRole: [\n                \"admin\",\n                \"superAdmin\"\n            ],\n            defaultRole: \"user\",\n            impersonationSessionDuration: 60 * 60 * 24,\n            defaultBanReason: \"No reason\",\n            defaultBanExpiresIn: undefined\n        }),\n        (0,better_auth_plugins__WEBPACK_IMPORTED_MODULE_2__.organization)({\n            async sendInvitationEmail (data) {\n                const inviteLink = `${\"http://localhost:3000\"}/invite/${data.id}`;\n                await (0,_emails__WEBPACK_IMPORTED_MODULE_5__.sendEmail)({\n                    to: data.email,\n                    subject: \"You've been invited to join an organization\",\n                    text: `Hello!\\n\\nYou have been invited by ${data.inviter.user.name} (${data.inviter.user.email})\\nto join the organization \"${data.organization.name}\".\\n\\nPlease click the following link to accept the invitation:\\n${inviteLink}\\n\\nIf you did not expect this invitation, please ignore this email.`\n                });\n                console.log(\"Invitation email sent with link:\", inviteLink);\n            }\n        }),\n        (0,better_auth_plugins__WEBPACK_IMPORTED_MODULE_2__.magicLink)({\n            sendMagicLink: async ({ email, token, url }, request)=>{\n                await (0,_emails__WEBPACK_IMPORTED_MODULE_5__.sendEmail)({\n                    to: email,\n                    subject: \"Your Magic Link\",\n                    text: `Click this link to log in and accept your invitation: ${url}`\n                });\n            },\n            expiresIn: 300\n        }),\n        (0,better_auth_next_js__WEBPACK_IMPORTED_MODULE_1__.nextCookies)()\n    ],\n    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    // NEW: databaseHooks to unset the active org ID when session is destroyed\n    databaseHooks: {\n        session: {\n            destroy: {\n                before: async (session, request)=>{\n                    // Force activeOrganizationId to null so it doesn't linger\n                    session.activeOrganizationId = null;\n                    // Return updated session so the library knows to handle it\n                    return {\n                        data: session\n                    };\n                }\n            }\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./utils/auth.ts\n");

/***/ }),

/***/ "(rsc)/./utils/db.ts":
/*!*********************!*\
  !*** ./utils/db.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var kysely__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! kysely */ \"(rsc)/./node_modules/kysely/dist/esm/kysely.js\");\n/* harmony import */ var kysely__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! kysely */ \"(rsc)/./node_modules/kysely/dist/esm/dialect/sqlite/sqlite-dialect.js\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_1__);\n// /home/zodx/Desktop/proyectx/utils/db.ts\n\n\n\n// IMPORTANT: Always use an absolute path so that both\n// the API routes and the layout code read the SAME file\nconst dbFilePath = path__WEBPACK_IMPORTED_MODULE_0___default().join(process.cwd(), \"sqlite.db\");\nconsole.log(\"[DB] Using DB file:\", dbFilePath);\nconst db = new kysely__WEBPACK_IMPORTED_MODULE_2__.Kysely({\n    dialect: new kysely__WEBPACK_IMPORTED_MODULE_3__.SqliteDialect({\n        database: new (better_sqlite3__WEBPACK_IMPORTED_MODULE_1___default())(dbFilePath)\n    })\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./utils/db.ts\n");

/***/ }),

/***/ "(rsc)/./utils/emails.ts":
/*!*************************!*\
  !*** ./utils/emails.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendEmail: () => (/* binding */ sendEmail)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n// utils/email.ts\n\nasync function sendEmail({ to, subject, text, html }) {\n    let transporter;\n    if (true) {\n        // Create a test account for development (Ethereal)\n        const testAccount = await nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTestAccount();\n        transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n            host: testAccount.smtp.host,\n            port: testAccount.smtp.port,\n            secure: testAccount.smtp.secure,\n            auth: {\n                user: testAccount.user,\n                pass: testAccount.pass\n            }\n        });\n    } else {}\n    try {\n        const info = await transporter.sendMail({\n            from: '\"Your App\" <no-reply@yourapp.com>',\n            to,\n            subject,\n            text,\n            html\n        });\n        // In development, log the preview URL\n        if (true) {\n            console.log(\"Email preview URL:\", nodemailer__WEBPACK_IMPORTED_MODULE_0__.getTestMessageUrl(info));\n        }\n    } catch (error) {\n        console.error(\"Error sending email:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi91dGlscy9lbWFpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxpQkFBaUI7QUFDbUI7QUFTN0IsZUFBZUMsVUFBVSxFQUFFQyxFQUFFLEVBQUVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQW9CO0lBQzNFLElBQUlDO0lBRUosSUFBSUMsSUFBeUIsRUFBYztRQUN6QyxtREFBbUQ7UUFDbkQsTUFBTUMsY0FBYyxNQUFNUix5REFBNEI7UUFDdERNLGNBQWNOLHVEQUEwQixDQUFDO1lBQ3ZDVyxNQUFNSCxZQUFZSSxJQUFJLENBQUNELElBQUk7WUFDM0JFLE1BQU1MLFlBQVlJLElBQUksQ0FBQ0MsSUFBSTtZQUMzQkMsUUFBUU4sWUFBWUksSUFBSSxDQUFDRSxNQUFNO1lBQy9CQyxNQUFNO2dCQUNKQyxNQUFNUixZQUFZUSxJQUFJO2dCQUN0QkMsTUFBTVQsWUFBWVMsSUFBSTtZQUN4QjtRQUNGO0lBQ0YsT0FBTyxFQVdOO0lBRUQsSUFBSTtRQUNGLE1BQU1RLE9BQU8sTUFBTW5CLFlBQVlvQixRQUFRLENBQUM7WUFDdENDLE1BQU07WUFDTnpCO1lBQ0FDO1lBQ0FDO1lBQ0FDO1FBQ0Y7UUFFQSxzQ0FBc0M7UUFDdEMsSUFBSUUsSUFBeUIsRUFBYztZQUN6Q3FCLFFBQVFDLEdBQUcsQ0FBQyxzQkFBc0I3Qix5REFBNEIsQ0FBQ3lCO1FBQ2pFO0lBQ0YsRUFBRSxPQUFPTSxPQUFPO1FBQ2RILFFBQVFHLEtBQUssQ0FBQyx3QkFBd0JBO1FBQ3RDLE1BQU1BO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYXBpZ3JhbS8uL3V0aWxzL2VtYWlscy50cz80OWZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHV0aWxzL2VtYWlsLnRzXG5pbXBvcnQgbm9kZW1haWxlciBmcm9tICdub2RlbWFpbGVyJztcblxuaW50ZXJmYWNlIFNlbmRFbWFpbE9wdGlvbnMge1xuICB0bzogc3RyaW5nO1xuICBzdWJqZWN0OiBzdHJpbmc7XG4gIHRleHQ6IHN0cmluZztcbiAgaHRtbD86IHN0cmluZzsgLy8gT3B0aW9uYWwgSFRNTCBjb250ZW50XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZW5kRW1haWwoeyB0bywgc3ViamVjdCwgdGV4dCwgaHRtbCB9OiBTZW5kRW1haWxPcHRpb25zKSB7XG4gIGxldCB0cmFuc3BvcnRlcjtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIENyZWF0ZSBhIHRlc3QgYWNjb3VudCBmb3IgZGV2ZWxvcG1lbnQgKEV0aGVyZWFsKVxuICAgIGNvbnN0IHRlc3RBY2NvdW50ID0gYXdhaXQgbm9kZW1haWxlci5jcmVhdGVUZXN0QWNjb3VudCgpO1xuICAgIHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuICAgICAgaG9zdDogdGVzdEFjY291bnQuc210cC5ob3N0LFxuICAgICAgcG9ydDogdGVzdEFjY291bnQuc210cC5wb3J0LFxuICAgICAgc2VjdXJlOiB0ZXN0QWNjb3VudC5zbXRwLnNlY3VyZSwgLy8gdHJ1ZSBmb3IgNDY1LCBmYWxzZSBmb3Igb3RoZXIgcG9ydHNcbiAgICAgIGF1dGg6IHtcbiAgICAgICAgdXNlcjogdGVzdEFjY291bnQudXNlcixcbiAgICAgICAgcGFzczogdGVzdEFjY291bnQucGFzcyxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gVXNlIHByb2R1Y3Rpb24gU01UUCBzZXR0aW5ncyAoZW5zdXJlIHRoZXNlIGVudiB2YXJpYWJsZXMgYXJlIHNldClcbiAgICB0cmFuc3BvcnRlciA9IG5vZGVtYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcbiAgICAgIGhvc3Q6IHByb2Nlc3MuZW52LlNNVFBfSE9TVCEsXG4gICAgICBwb3J0OiBOdW1iZXIocHJvY2Vzcy5lbnYuU01UUF9QT1JUKSxcbiAgICAgIHNlY3VyZTogcHJvY2Vzcy5lbnYuU01UUF9TRUNVUkUgPT09ICd0cnVlJywgLy8gdHJ1ZSBmb3IgcG9ydCA0NjVcbiAgICAgIGF1dGg6IHtcbiAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuU01UUF9VU0VSISxcbiAgICAgICAgcGFzczogcHJvY2Vzcy5lbnYuU01UUF9QQVNTISxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IGluZm8gPSBhd2FpdCB0cmFuc3BvcnRlci5zZW5kTWFpbCh7XG4gICAgICBmcm9tOiAnXCJZb3VyIEFwcFwiIDxuby1yZXBseUB5b3VyYXBwLmNvbT4nLFxuICAgICAgdG8sXG4gICAgICBzdWJqZWN0LFxuICAgICAgdGV4dCxcbiAgICAgIGh0bWwsXG4gICAgfSk7XG4gIFxuICAgIC8vIEluIGRldmVsb3BtZW50LCBsb2cgdGhlIHByZXZpZXcgVVJMXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdFbWFpbCBwcmV2aWV3IFVSTDonLCBub2RlbWFpbGVyLmdldFRlc3RNZXNzYWdlVXJsKGluZm8pKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VuZGluZyBlbWFpbDonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJub2RlbWFpbGVyIiwic2VuZEVtYWlsIiwidG8iLCJzdWJqZWN0IiwidGV4dCIsImh0bWwiLCJ0cmFuc3BvcnRlciIsInByb2Nlc3MiLCJ0ZXN0QWNjb3VudCIsImNyZWF0ZVRlc3RBY2NvdW50IiwiY3JlYXRlVHJhbnNwb3J0IiwiaG9zdCIsInNtdHAiLCJwb3J0Iiwic2VjdXJlIiwiYXV0aCIsInVzZXIiLCJwYXNzIiwiZW52IiwiU01UUF9IT1NUIiwiTnVtYmVyIiwiU01UUF9QT1JUIiwiU01UUF9TRUNVUkUiLCJTTVRQX1VTRVIiLCJTTVRQX1BBU1MiLCJpbmZvIiwic2VuZE1haWwiLCJmcm9tIiwiY29uc29sZSIsImxvZyIsImdldFRlc3RNZXNzYWdlVXJsIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./utils/emails.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/better-auth","vendor-chunks/@better-fetch","vendor-chunks/kysely","vendor-chunks/mysql2","vendor-chunks/nodemailer","vendor-chunks/aws-ssl-profiles","vendor-chunks/iconv-lite","vendor-chunks/zod","vendor-chunks/better-call","vendor-chunks/@noble","vendor-chunks/jose","vendor-chunks/long","vendor-chunks/lru-cache","vendor-chunks/@better-auth","vendor-chunks/denque","vendor-chunks/is-property","vendor-chunks/lru.min","vendor-chunks/rou3","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/named-placeholders","vendor-chunks/generate-function","vendor-chunks/safer-buffer","vendor-chunks/defu","vendor-chunks/uncrypto"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fproducts%2Froute&page=%2Fapi%2Fproducts%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fproducts%2Froute.ts&appDir=%2Fhome%2Fzodx%2FDesktop%2Fproyectx%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fzodx%2FDesktop%2Fproyectx&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();